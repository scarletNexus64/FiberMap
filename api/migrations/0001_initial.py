# Generated by Django 5.2.4 on 2025-07-27 08:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('entreprise', 'Entreprise'), ('banque', 'Banque'), ('particulier', 'Particulier')], max_length=50)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Coupure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('point_estime_lat', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('point_estime_lng', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('status', models.CharField(choices=[('detectee', 'Détectée'), ('en_cours', 'En cours de réparation'), ('reparee', 'Réparée')], default='detectee', max_length=20)),
                ('description_diagnostic', models.TextField(blank=True)),
                ('date_detection', models.DateTimeField(auto_now_add=True)),
                ('date_resolution', models.DateTimeField(blank=True, null=True)),
                ('superviseur_notifie', models.BooleanField(default=False)),
                ('client_notifie', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-date_detection'],
            },
        ),
        migrations.CreateModel(
            name='ParametreApplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cle', models.CharField(max_length=100, unique=True)),
                ('valeur', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('type_donnee', models.CharField(choices=[('string', 'Texte'), ('integer', 'Entier'), ('float', 'Décimal'), ('boolean', 'Booléen'), ('json', 'JSON')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Paramètre application',
                'verbose_name_plural': 'Paramètres application',
            },
        ),
        migrations.CreateModel(
            name='TypeLiaison',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('LS', 'Liaison Spécialisée'), ('GPON', 'Liaison NBN (GPON)')], max_length=10)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Type de liaison',
                'verbose_name_plural': 'Types de liaisons',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('technicien', 'Technicien'), ('superviseur', 'Superviseur'), ('commercial', 'Commercial')], default='technicien', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Intervention',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type_intervention', models.CharField(choices=[('creation', 'Création'), ('modification', 'Modification'), ('depannage', 'Dépannage'), ('maintenance', 'Maintenance préventive')], max_length=20)),
                ('status', models.CharField(choices=[('planifiee', 'Planifiée'), ('en_cours', 'En cours'), ('terminee', 'Terminée'), ('annulee', 'Annulée')], default='planifiee', max_length=20)),
                ('date_planifiee', models.DateTimeField()),
                ('date_debut', models.DateTimeField(blank=True, null=True)),
                ('date_fin', models.DateTimeField(blank=True, null=True)),
                ('duree_estimee', models.DurationField()),
                ('description', models.TextField()),
                ('resume_changement', models.TextField(blank=True)),
                ('materiel_utilise', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('coupure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.coupure')),
                ('technicien_principal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interventions_principales', to=settings.AUTH_USER_MODEL)),
                ('techniciens_secondaires', models.ManyToManyField(blank=True, related_name='interventions_secondaires', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_planifiee'],
            },
        ),
        migrations.CreateModel(
            name='CommitIntervention',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_commit', models.CharField(max_length=255)),
                ('description_detaillee', models.TextField(blank=True)),
                ('hash_commit', models.CharField(max_length=40, unique=True)),
                ('changements_json', models.JSONField()),
                ('date_commit', models.DateTimeField(auto_now_add=True)),
                ('etat_avant', models.JSONField(blank=True, null=True)),
                ('etat_apres', models.JSONField(blank=True, null=True)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('intervention', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commits', to='api.intervention')),
            ],
            options={
                'ordering': ['-date_commit'],
            },
        ),
        migrations.CreateModel(
            name='Liaison',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom_liaison', models.CharField(max_length=255, unique=True)),
                ('point_central_lat', models.DecimalField(decimal_places=8, max_digits=10)),
                ('point_central_lng', models.DecimalField(decimal_places=8, max_digits=11)),
                ('point_client_lat', models.DecimalField(decimal_places=8, max_digits=10)),
                ('point_client_lng', models.DecimalField(decimal_places=8, max_digits=11)),
                ('status', models.CharField(choices=[('active', 'Active'), ('en_panne', 'En panne'), ('en_cours', 'En cours de réparation'), ('planifiee', 'Planifiée')], default='active', max_length=20)),
                ('distance_totale', models.FloatField(help_text='Distance en km')),
                ('convertisseur_central', models.CharField(blank=True, max_length=100)),
                ('convertisseur_client', models.CharField(blank=True, max_length=100)),
                ('type_connectique', models.CharField(blank=True, choices=[('FC/SC', 'FC/SC'), ('LC/SC', 'LC/SC'), ('SC/SC', 'SC/SC')], max_length=20)),
                ('olt_source', models.CharField(blank=True, max_length=100)),
                ('port_olt', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liaisons', to='api.client')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='liaisons_creees', to=settings.AUTH_USER_MODEL)),
                ('type_liaison', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.typeliaison')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='intervention',
            name='liaison',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interventions', to='api.liaison'),
        ),
        migrations.AddField(
            model_name='coupure',
            name='liaison',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coupures', to='api.liaison'),
        ),
        migrations.CreateModel(
            name='MesureOTDR',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('distance_coupure', models.FloatField(help_text='Distance de la coupure en km')),
                ('attenuation', models.FloatField(help_text='Atténuation en dB')),
                ('type_evenement', models.CharField(choices=[('coupure', 'Coupure'), ('attenuation', 'Atténuation excessive'), ('reflet', 'Réflexion')], max_length=50)),
                ('date_mesure', models.DateTimeField(auto_now_add=True)),
                ('commentaires', models.TextField(blank=True)),
                ('fichier_otdr', models.FileField(blank=True, upload_to='otdr_files/')),
                ('liaison', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mesures_otdr', to='api.liaison')),
                ('technicien', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Mesure OTDR',
                'verbose_name_plural': 'Mesures OTDR',
                'ordering': ['-date_mesure'],
            },
        ),
        migrations.AddField(
            model_name='coupure',
            name='mesure_otdr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.mesureotdr'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type_notification', models.CharField(choices=[('coupure', 'Coupure détectée'), ('intervention', 'Intervention planifiée'), ('maintenance', 'Maintenance requise'), ('alerte', 'Alerte système')], max_length=20)),
                ('titre', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('lue', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_lecture', models.DateTimeField(blank=True, null=True)),
                ('coupure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.coupure')),
                ('destinataire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('intervention', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.intervention')),
                ('liaison', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.liaison')),
            ],
            options={
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='PointDynamique',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type_point', models.CharField(choices=[('chambre', 'Chambre de tirage'), ('manchon', 'Manchon'), ('convertisseur', 'Convertisseur'), ('fdh', 'FDH (Fiber Distribution Hub)'), ('splitter', 'Splitter/Répartiteur')], max_length=20)),
                ('nom', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('distance_depuis_central', models.FloatField(help_text='Distance en km depuis le central')),
                ('description', models.TextField(blank=True)),
                ('type_armoire', models.CharField(blank=True, max_length=100)),
                ('presence_splitter', models.BooleanField(default=False)),
                ('ratio_splitter', models.CharField(blank=True, max_length=20)),
                ('port_utilise', models.CharField(blank=True, max_length=50)),
                ('type_distribution', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('liaison', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='points_dynamiques', to='api.liaison')),
            ],
            options={
                'verbose_name': 'Point dynamique',
                'verbose_name_plural': 'Points dynamiques',
                'ordering': ['distance_depuis_central'],
            },
        ),
        migrations.CreateModel(
            name='PhotoPoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='points_photos/')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('point_dynamique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='api.pointdynamique')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='FicheTechnique',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('modele_equipement', models.CharField(blank=True, max_length=100)),
                ('numero_serie', models.CharField(blank=True, max_length=100)),
                ('fabricant', models.CharField(blank=True, max_length=100)),
                ('date_installation', models.DateField(blank=True, null=True)),
                ('specifications_json', models.JSONField(blank=True, null=True)),
                ('manuel_url', models.URLField(blank=True)),
                ('notes_maintenance', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('point_dynamique', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.pointdynamique')),
            ],
            options={
                'verbose_name': 'Fiche technique',
                'verbose_name_plural': 'Fiches techniques',
            },
        ),
        migrations.AddField(
            model_name='coupure',
            name='point_dynamique_proche',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.pointdynamique'),
        ),
    ]
